# Задание 25. Поиск максимальной подстроки

1. (№2419) В текстовом файле находится цепочка из символов латинского алфавита A, B, C длиной не более 106 символов. Найдите длину самой длинной подцепочки, состоящей из символов C.  
Ответ: `11`
```python
s = open('24_2419.txt').readline()
s = s.replace('A', ' ').replace('B', ' ')
print(max(len(c) for c in s.split()))
```
2. (№2420) В текстовом файле находится цепочка из символов латинского алфавита A, B, C, D, E, F. Найдите длину самой длинной подцепочки, состоящей из символов A, B, E, F (в произвольном порядке).  
Ответ: ``
```python
s = open('24_2420.txt').readline()
s = s.replace('C', ' ').replace('D', ' ')
print(max(len(c) for c in s.split()))
```
3. (№2421) В текстовом файле находится цепочка из символов латинского алфавита A, B, C, D, E, F. Найдите длину самой длинной подцепочки, не содержащей символа D.  
Ответ: `44`
```python
s = open('24_2421.txt').readline()
print(max(len(c) for c in s.replace('D', ' ').split()))
```
4. (№865) (А.М. Кабанов) В текстовом файле находится цепочка из символов латинского алфавита A, B, C, D, E, F. Найдите длину самой длинной подцепочки, не содержащей символов C и F.  
Ответ: `19`
```python
s = open('24_865.txt').readline()
s = s.replace('C', ' ').replace('F', ' ')
print(max(len(c) for c in s.split()))
```
5. Текстовый файл состоит не более чем из 106 символов 1, 2, 3, A, B, C. Определите максимальное количество идущих подряд цифр.  
Ответ: `20`
```python
s = open('24_2426.txt').readline()
s = s.replace('A', ' ').replace('B', ' ').replace('C', ' ')
print(max(len(c) for c in s.split()))
```
6. (№1040) В файле записана последовательность символов. Укажите длину самой длинной последовательности, состоящей из цифр.  
Ответ: `12`
```python
s = open('24_1040.txt').readline()
for l in 'qwertyuiopasdfghjklzxcvbnm':
    s = s.replace(l, ' ')
print(max(len(c) for c in s.split()))
```
7. (№1428) Текстовый файл состоит не более чем из 1200000 символов, которые являются прописными буквами латинского алфавита. Определите максимальное количество идущих подряд символов, среди которых нет подстроки XY и подстроки XZ. Для выполнения этого задания следует написать программу.  
Ответ: `25`
```python
s = open('24_1428.txt').readline()
s = s.replace('XY', 'X Y').replace('XZ', 'X Z')
print(max(len(c) for c in s.split()))
```
8. (№1975) Текстовый файл состоит из символов P, Q, R и S. Определите максимальное количество идущих подряд символов в прилагаемом файле, среди которых нет идущих подряд символов P. Для выполнения этого задания следует написать программу.  
Ответ: `188`
```python
s = open('24_1975.txt').readline()
while 'PP' in s:
    s = s.replace('PP', 'P P')
print(max(len(c) for c in s.split()))
```
9. (№1302) Текстовый файл состоит не более чем из 1 200 000 символов X, Y, и Z. Определите максимальное количество идущих подряд символов, среди которых нет подстроки XZZY. Для выполнения этого задания следует написать программу.  
Ответ: `1713`
```python
s = open('24_1302.txt').readline()
s = s.replace('XZZY', 'XZZ ZZY')
print(max(len(c) for c in s.split()))
```
10. (№21) Текстовый файл состоит не более чем из 106 символов X, Y и Z. Определите максимальное количество идущих подряд символов, среди которых каждые два соседних различны. Для выполнения этого задания следует написать программу.  
Ответ: `35`
```python
s = open('24_21.txt').readline()
c = m = 1
for i in range(len(s) - 1):
    if s[i] != s[i + 1]:
        c += 1
        m = max(m, c)
    else:
        c = 1
print(m)
```
11. (№2422) Текстовый файл состоит не более чем из 106 символов X, Y, Z. Определите максимальное количество идущих подряд символов, расположенных в алфавитном порядке (возможно с повторением символов).  
Ответ: `15`
```python
s = open('24_2422.txt').readline()
c = m = 1
for i in range(len(s) - 1):
    if s[i] <= s[i + 1]:
        c += 1
        m = max(m, c)
    else:
        c = 1
print(m)
```
12. (№2423) Текстовый файл состоит не более чем из 106 символов арабских цифр (0, 1, ..., 9). Определите максимальное количество идущих подряд цифр, расположенных в строгом возрастающем порядке.  
Ответ: `8`
```python
s = open('24_2423.txt').readline()
c = m = 1
for i in range(len(s) - 1):
    if s[i] < s[i + 1]:
        c += 1
        m = max(m, c)
    else:
        c = 1
print(m)
```
13. (№2427) (В.Н. Шубинкин) Текстовый файл содержит последовательность из строчных и заглавных букв английского алфавита и цифр, всего не более 106 символов. Убывающей подпоследовательностью будем называть последовательность символов, расположенных в порядке уменьшения их номера в кодовой таблице символов ASCII. Запишите в ответе наибольшую убывающую подпоследовательность. Если таких последовательностей несколько, запишите первую из них.  
Ответ: `zrqjWRC1`
```python
s = open('24_2427.txt').readline()
c = m = s[0]
for i in range(1, len(s)):
    if s[i - 1] > s[i]:
        c += s[i]
        m = max(m, c, key=len)
    else:
        c = s[i]
print(m)
```
14. (№1145) Текстовый файл содержит строку из заглавных букв A, B, C, D, E, F, всего не более чем из 106 символов. DD-подстроками назовём последовательности символов A, B, C, E, F, ограниченные символами D (граничные символы входят в подстроку). Определите минимальную длину DD-подстроки. Подстроки, состоящие из двух символов, не учитывать.  
Ответ: `139`
```python
s = open('24_1145.txt').readline()
print(min(len(c) + 2 for c in s.split('D') if c != ''))
```
15. (№1146) Текстовый файл содержит строку из заглавных букв A, B, C, D, E, F, всего не более чем из 106 символов. D-подстроками назовём последовательности идущих подряд символов D, ограниченные иными символами или концом строки. Например, в строке ABDDDBCDDDDBEDDDDDD три D-подстроки: DDD, DDDD, DDDDD. Определите минимальную длину D-подстроки.  
Ответ: `5`
```python
s = open('24_1146.txt').readline()
for a in 'ABCEF': s = s.replace(a, ' ')
print(min(len(c) for c in s.split()))
```
16. (№2250) Текстовый файл содержит только заглавные буквы латинского алфавита(ABC…Z). Определите максимальное количество идущих подряд символов, среди которых не более одной буквы A.  
Ответ: `337`
```python
s = open('24_2250.txt').readline()
m = 0
s = s.split('A')
for i in range(len(s) - 1):
    st = s[i] + 'A' + s[i + 1]
    m = max(m, len(st))
print(m)
```
17. (№2251) Текстовый файл содержит только заглавные буквы латинского алфавита(ABC…Z). Определите максимальное количество идущих подряд символов, среди которых не более двух букв D.  
Ответ: `373`
```python
s = open('24_2251.txt').readline()
s = s.split('D')
m = 0
for i in range(len(s) - 2):
    m = max(m, len(s[i] + 'D' + s[i + 1] + 'D' + s[i + 2]))
print(m)
```
18. (№66) Текстовый файл состоит не более чем из 106 латинских символов К, О, Т. Определите максимальное количество подряд идущих комбинаций КОТ.  
Ответ: `75`
```python
s = open('24_66.txt').readline()
s = s.replace('KOT', '!')
for a in 'KOT': s = s.replace(a, ' ')
print(max(len(c) for c in s.split()))
```
19. (№4602) Текстовый файл состоит из символов A, B, C, D и O. Определите максимальное количество идущих подряд пар символов вида **согласная + гласная** в прилагаемом файле.  
Ответ: `174`
```python
s = open('24_4602.txt').readline()
s = s.replace('O', 'A').replace('C', 'B').replace('D', 'B')
s = s.replace('BA', '!').replace('A', ' ').replace('B', ' ')
print(max(len(c) for c in s.split()))
```
20. (№4642) (А. Калинин)  Текстовый файл состоит из символов A, B и цифр 1, 2. Определите максимальное количество идущих подряд пар символов вида буква  + цифра в прилагаемом файле.  
Ответ: `34`
```python
s = open('24_4642.txt').readline()
s = s.replace('B', 'A').replace('2', '1') \
    .replace('A1', '!') \
    .replace('A', ' ').replace('1', ' ')
print(max(len(c) for c in s.split()))
```
21. (№4627) Текстовый файл состоит из символов N, O и P. Определите максимальное количество подряд идущих последовательностей символов NPO или PNO в прилагаемом файле. Искомая последовательность должна состоять только из троек NPO, или только из троек PNO, или только из троек NPO и PNO в произвольном порядке их следования.  
Ответ: `327`
```python
s = open('24_4627.txt').readline()
s = s.replace('PNO', 'NPO').replace('NPO', '!') \
    .replace('P', ' ').replace('N', ' ').replace('O', ' ')
print(max(len(c) for c in s.split()))
```
22. (№4643) (А. Калинин)  Текстовый файл состоит из символов A, B и цифр 1, 2. Определите максимальное количество идущих подряд троек символов вида двузначное число + буква в прилагаемом файле.  
Ответ: `67`
```python
s = open('24_4643.txt').readline()
s = s.replace('B', 'A').replace('2', '1') \
    .replace('11A', '!') \
    .replace('A', ' ').replace('1', ' ')
print(max(len(c) for c in s.split()))
```
23. (№4546) Текстовый файл состоит не более, чем из 106 символов из набора A, B, C. Найдите максимальное количество подряд идущих троек символов A<span>&#42;</span>A или C<span>&#42;</span>C, где <span>&#42;</span> обозначает один любой символ.  
Ответ: `21`
```python
s = open('24_4546.txt').readline()
m = 0
for i in range(3):
    c = 0
    for j in range(i, len(s) - 2, 3):
        if s[j] + s[j + 2] == 'AA' or s[j] + s[j + 2] == 'CC':
            c += 1
            m = max(m, c)
        else:
            c = 0
print(m)
```
24. (№5171) В текстовом файле находится цепочка из символов латинского алфавита A, B, C, D, E, F. Найдите максимальную длину цепочки вида CACACA.... (состоящей из фрагментов CA, последний фрагмент может быть неполным).  
Ответ: `54`
```python
s = open('24_5171.txt').readline()
c, m = '', 0
while c in s:
    for i in 'CA':
        c += i
        if c in s:
            m = max(m, len(c))
print(m)
```
25. (№2425) В текстовом файле находится цепочка из символов латинского алфавита A, B, C, D, E, F. Найдите максимальную длину цепочки вида DBACDBACDBAC.... (состоящей из фрагментов DBAC, последний фрагмент может быть неполным).  
Ответ: `95`
```python
s = open('24_2425.txt').readline()
c, m = '', 0
while c in s:
    for i in 'DBAC':
        c += i
        if c in s:
            m = max(m, len(c))
print(m)
```
